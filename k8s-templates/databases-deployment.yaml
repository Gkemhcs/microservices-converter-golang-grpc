apiVersion: v1
kind: Namespace
metadata:
  name: database-ns
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: database-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:7
        ports:
        - containerPort: 6379
        args:
        - "redis-server"
        - "--save"
        - "60"
        - "1"
        - "--loglevel"
        - "warning"
        volumeMounts:
        - name: redis-data
          mountPath: /data
      volumes:
      - name: redis-data
        emptyDir: {} # Use a PersistentVolumeClaim for production
---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: database-ns
spec:
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    app: redis
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: database-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:15
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_USER
              value: "converter"
            - name: POSTGRES_PASSWORD
              value: "converter1234"
            - name: POSTGRES_DB
              value: "converter"
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
            - name: init-scripts
              mountPath: /docker-entrypoint-initdb.d
      volumes:
        - name: postgres-data
          emptyDir: {} # Replace with PersistentVolumeClaim for production
        - name: init-scripts
          configMap:
            name: postgres-init-scripts
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: database-ns
spec:
  ports:
    - port: 5432
      targetPort: 5432
  selector:
    app: postgres
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-init-scripts
  namespace: database-ns
data:
  init.sql: |
    -- Place your initialization SQL scripts here
      CREATE TABLE IF NOT EXISTS downloads (
      id SERIAL PRIMARY KEY,
      user_email VARCHAR(255) NOT NULL,
      signed_url TEXT NOT NULL,
      file_type VARCHAR(50) NOT NULL CHECK (file_type IN ('text-to-speech', 'video-to-audio', 'image-to-pdf')),
      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
      );
